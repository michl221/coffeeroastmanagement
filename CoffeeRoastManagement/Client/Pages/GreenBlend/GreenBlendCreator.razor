@if (blend != null)
{
    <MudCard>
            <MudCardContent>
                <MudSimpleTable>
                    @*<thead>
                    <tr>Green bean</tr>
                    <tr>Amount</tr>
                    </thead>*@
                    <tbody>
                        @foreach (var x in blend)
                        {
                            <tr>
                                <td><MudTextField Label="Green bean" @bind-Value="x.StockItem.GreenBeanInfo.Name" Disabled="true"/></td>
                                <td><MudTextField Label="Amount" @bind-Value="x.Amount" Disabled="false" Adornment="Adornment.End" AdornmentText="kg" TextChanged="@(() => AmountChanged())"/></td>
                            </tr>
                    }
                    </tbody>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>

} 
@code {
    [Parameter]
    public List<Stock> AvailableBeans { get; set; }
    [Parameter]
    public List<GreenBlend> SelectedBeans { get; set; }
    [Parameter]
    public EventCallback<List<GreenBlend>> CurrentSelection { get; set; }
    [Parameter] 
    public EventCallback OnValidSubmit { get; set; }
    
    private List<GreenBlend> blend { get; set; } = new List<GreenBlend>();

    protected override void OnParametersSet()
    {
        Console.WriteLine($"OnParametersSet {AvailableBeans.Count}.");
        blend.Clear();
        foreach (var x in AvailableBeans)
        {
            if (x.BeansAvailable)
            {
                Console.WriteLine($"Add to list {x.Id}, {x.GreenBeanInfo.Name}.");
                var gb = new GreenBlend()
                {
                    Id = GetGreenBlendId(x),
                    StockItem = x,
                    Amount = GetAmount(x.GreenBeanInfo)
                };
                blend.Add(gb);
            }
        }
    }

    private int GetGreenBlendId(Stock gb)
    {
        var res = SelectedBeans.FirstOrDefault(x => x.StockItem.Id == gb.Id);
        if (res != null)
        {
            return res.Id;
        }
        return 0;
    }
    // Checks if there is already a green bean selected for the blend and returns the amount
    private double GetAmount(GreenBeanInfo gbi)
    {
        foreach (var sb in SelectedBeans)
        {
            if (sb.StockItem.Id == gbi.Id)
            {
                return sb.Amount;
            }
        }
        return 0.0;
    }
    private void AmountChanged()
    {
        Console.WriteLine($"Amount changed");
        var selectedbeans = new List<GreenBlend>();
        foreach (var x in blend)
        {
            Console.WriteLine($"check {x.StockItem.GreenBeanInfo.Name} with {x.Amount}.");

            if (x.Amount > 0)
            {
                selectedbeans.Add(x);
                Console.WriteLine($"add bean {x.StockItem.GreenBeanInfo.Name} with {x.Amount}.");
            }
        }
        CurrentSelection.InvokeAsync(selectedbeans);
    }


}
