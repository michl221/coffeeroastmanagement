@if (blend != null)
{
    <MudCard>
            <MudCardContent>
                <MudSimpleTable>
                    @*<thead>
                    <tr>Green bean</tr>
                    <tr>Amount</tr>
                    </thead>*@
                    <tbody>
                        @foreach (var x in blend)
                        {
                        <tr>
                            <td><MudTextField Label="Green bean" @bind-Value="x.StockItem.GreenBeanInfo.Name" Disabled="true" /></td>
                            <td><MudTextField Label="Amount" @bind-Value="x.Amount" Disabled="false" Adornment="Adornment.End" AdornmentText="kg" TextChanged="@(() => AmountChanged())" /></td>
                            @*<td><MudTextField Label="Green bean" Value="x.StockItem.GreenBeanInfo.Name" Disabled="true" /></td>
                            <td><MudTextField Label="Amount" Value="x.Amount" Disabled="false" Adornment="Adornment.End" AdornmentText="kg" TextChanged="@(() => AmountChanged())" /></td>*@
                        </tr>
                    }
                    </tbody>
                </MudSimpleTable>
            </MudCardContent>
        </MudCard>

} 
@code {
        [Parameter]
        public Stock[] AvailableBeans { get; set; }
        [Parameter]
        public GreenBlend[] SelectedBeans { get; set; }
        [Parameter]
        public EventCallback<GreenBlend[]> CurrentSelection { get; set; }
        [Parameter]
        public EventCallback OnValidSubmit { get; set; }

        private List<GreenBlend> blend { get; set; } = new List<GreenBlend>();

        protected override void OnParametersSet()
        {
            Console.WriteLine($"OnParametersSet {AvailableBeans.Length}.");
            blend.Clear();
            foreach (var x in AvailableBeans)
            {
                if (x.BeansAvailable)
                {
                    Console.WriteLine($"Add to list {x.Id}, {x.GreenBeanInfo.Name}.");
                    var gb = new GreenBlend()
                    {
                        Id = GetGreenBlendId(x),
                        StockItem = x,
                        Amount = GetAmount(x)
                };
                blend.Add(gb);
            }
        }
    }

    private int GetGreenBlendId(Stock st)
    {
        var res = SelectedBeans.FirstOrDefault(x => x.StockItem.Id == st.Id);
        if (res != null)
        {
            return res.Id;
        }
        return 0;
    }

    // Checks if there is already a green bean selected for the blend and returns the amount
    private double GetAmount(Stock st)
    {
        foreach (var sb in SelectedBeans)
        {
            if (sb.StockItem.Id == st.Id)
            {
                return sb.Amount;
            }
        }
        return 0.0;
    }
    private void AmountChanged()
    {
        Console.WriteLine($"Amount changed");
        var selectedbeans = new List<GreenBlend>();
        foreach (var x in blend)
        {
            Console.WriteLine($"check {x.StockItem.GreenBeanInfo.Name} with {x.Amount}.");

            if (x.Amount > 0)
            {
                selectedbeans.Add(x);
                Console.WriteLine($"add bean {x.StockItem.GreenBeanInfo.Name} with {x.Amount}.");
            }
        }
        CurrentSelection.InvokeAsync(selectedbeans.ToArray());
    }
}
