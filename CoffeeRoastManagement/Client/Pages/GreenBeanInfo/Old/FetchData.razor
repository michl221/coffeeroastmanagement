@page "/greenbeaninfo_old"
@inject HttpClient client
@inject IJSRuntime js
<h3>Green Bean Information</h3>
<div class="form-group">
    <a class="btn btn-success" href="greenbeaninfo/create"><i class="oi oi-plus"></i> Create New</a>
</div>
<br>
@if (greenbeaninfo == null)
{
    <text>Loading...</text>
}
else if (greenbeaninfo.Length == 0)
{
    <text>No Records Found.</text>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Country</th>
                <th>Region</th>
                <th>Farmer</th>
                <th>Url</th>
                <th>Note</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (GreenBeanInfo gbi in greenbeaninfo)
            {
                <tr>
                    <td>@gbi.Id</td>
                    <td>@gbi.Name</td>
                    <td>@gbi.Country</td>
                    <td>@gbi.Region</td>
                    <td>@gbi.Farmer</td>
                    <td>@gbi.Url</td>
                    <td>@gbi.Note</td>
                    <td>
                        <a class="btn btn-success" href="greenbeaninfo/edit/@gbi.Id">Edit</a>
                        <button class="btn btn-danger" @onclick="@(() => Delete(gbi.Id))">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    GreenBeanInfo[] greenbeaninfo { get; set; }
    protected override async Task OnInitializedAsync()
    {
        greenbeaninfo = await client.GetFromJsonAsync<GreenBeanInfo[]>("api/greenbeaninfo");
    }
    async Task Delete(int gbiId)
    {
        var gbi = greenbeaninfo.First(x => x.Id == gbiId);
        if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {gbi.Name}'s ({gbi.Id}) Record?"))
        {
            await client.DeleteAsync($"api/greenbeaninfo/{gbiId}");
            await OnInitializedAsync();
        }
    }
}